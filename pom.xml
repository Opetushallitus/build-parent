<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- default build configuration for all projects and modules, can be overridden -->

	<groupId>fi.vm.sade.generic</groupId>
	<artifactId>build-parent</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>pom</packaging>
	
	<properties>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<jetty.module>${project.artifactId}</jetty.module>
		<jetty.webApp>../${jetty.module}/target/${jetty.module}.war</jetty.webApp>
		<daemon>true</daemon>

		<liferay.version>6.1.0</liferay.version>
		
		<!-- UI libraries -->
		<vaadin.version>6.7.5</vaadin.version>
		<gwt.version>2.3.0</gwt.version>
		<gwt.plugin.version>2.2.0</gwt.plugin.version>
		<servlet.version>3.0.1</servlet.version>
		<vaadin.formbinder.version>2.1.1</vaadin.formbinder.version>
		<portlet.api.version>2.0</portlet.api.version>
		<google.map.widget.version>0.9.13</google.map.widget.version>

		<!-- Our generic components -->
		<sade-generic.version>1.0-SNAPSHOT</sade-generic.version>

		<!-- ServiceMix components / frameworks -->
		<cxf.version>2.4.6</cxf.version>
        <wss4j.version>1.6.4</wss4j.version>
		<camel.version>2.8.3</camel.version>
		<spring.version>3.1.1.RELEASE</spring.version>
		<osgi.spring.version>3.0.6.RELEASE</osgi.spring.version>
		<spring.osgi.version>1.2.1</spring.osgi.version>
		<activemq.version>5.5.1</activemq.version>

		<!-- Logging -->
		<slf4j.version>1.6.1</slf4j.version>

		<!-- Database -->
		<jpa-api.version>2.0.0</jpa-api.version>
		<atomikos.version>3.6.6</atomikos.version>
		<jta.version>1.1</jta.version>
		<postgresql.version>9.1-901-1.jdbc4</postgresql.version>
		<hsqldb.version>2.0.0</hsqldb.version>
		<hibernate.version>4.1.0.Final</hibernate.version>
		<hibernate.ejb.version>4.1.0.Final</hibernate.ejb.version>
		<hibernate.annotations.common.version>4.1.0.Final</hibernate.annotations.common.version>
		<commons-dbcp.version>1.4_1</commons-dbcp.version>
		<commons-lang.version>2.6</commons-lang.version>
		<jetty.version>6.1.25</jetty.version>
        <querydsl.version>2.6.0</querydsl.version>
        
		<!-- Utils -->
        <commons-codec.version>1.6</commons-codec.version>
        <jodatime.version></jodatime.version>
		<log4j.version>1.2.14</log4j.version>
		<aopalliance.version>1.0</aopalliance.version>
		<aspectj.version>1.6.3</aspectj.version>

		<!-- Testing -->
		<junit.version>4.10</junit.version>
		<selenium.version>2.24.1</selenium.version>
		<dbunit.version>2.4.8</dbunit.version>
		<mockito.version>1.9.0</mockito.version>

		<!-- Plugins versions -->
		<compiler.plugin.version>2.3.2</compiler.plugin.version>
		<enforcer.plugin.version>1.0.1</enforcer.plugin.version>
		<surefire.plugin.version>2.12</surefire.plugin.version>
		<failsafe.plugin.version>2.12</failsafe.plugin.version>
		<deploy.plugin.version>2.7</deploy.plugin.version>
		<release.plugin.version>2.2.1</release.plugin.version>
		<source.plugin.version>2.1.2</source.plugin.version>
		<bundle.plugin.version>2.3.7</bundle.plugin.version>
		<checkstyle.plugin.version>2.9.1</checkstyle.plugin.version>
		<jar.plugin.version>2.4</jar.plugin.version>
		<resources.plugin.version>2.5</resources.plugin.version>
		<findbugs.plugin.version>2.3.3</findbugs.plugin.version>
		<jrebel.plugin.version>1.1.3</jrebel.plugin.version>
			
		<project.svn.base>https://penaali.hard.ware.fi/svn/generic/${project.artifactId}</project.svn.base>

		<embedService.serviceArtifactId>${project.parent.artifactId}-service</embedService.serviceArtifactId>

		<clover.version>3.1.4</clover.version>
		<clover.fullRunEvery>500</clover.fullRunEvery>
		<clover.generateHistorical>true</clover.generateHistorical>

		<clover.base>/data00/atlassian/application-data/bamboo/clover</clover.base>
		<clover.historyDir>${clover.base}/history/${project.groupId}-${project.artifactId}</clover.historyDir>
		<clover.snapshot>${clover.base}/snapshot/${project.groupId}-${project.artifactId}/clover.snapshot</clover.snapshot>
		<clover.outputDirectory>${clover.base}/output/${project.groupId}-${project.artifactId}</clover.outputDirectory>
		<clover.cloverDatabase>${clover.base}/db/${project.groupId}-${project.artifactId}/clover.db</clover.cloverDatabase>

		<checkstyle.excludes>**/clover/**,**/target/**/src/**,**/target/**/src-test/**,**/ytj-generated-model/**</checkstyle.excludes>
		<checkstyle.skip>false</checkstyle.skip>
		<checkstyle.failsOnError>true</checkstyle.failsOnError>
		<checkstyle.consoleOutput>true</checkstyle.consoleOutput>
		<checkstyle.configLocation><![CDATA[http://pulpetti.hard.ware.fi:9000/sonar/profiles/export?format=checkstyle&language=java&name=Sonar%2520way%2520with%2520Findbugs%2520and%2520OPH%2520Checkstyle]]></checkstyle.configLocation>

		<surefire.reportsDirectory>${project.build.directory}/surefire-reports</surefire.reportsDirectory>

		<compiler.debug>false</compiler.debug>

        <mongo.version>2.7.1</mongo.version>

        <ant-contrib.version>1.0b3</ant-contrib.version>
        <ant-jsch.version>1.8.1</ant-jsch.version>
        <jsch.version>0.1.48</jsch.version>

        <liferay.dir.old>${project.basedir}/../../../servers/trunk/liferay/target/servers/liferay-portal-6.1.0-ce-ga1</liferay.dir.old>
        <liferay.dir.new>${user.home}/servers/liferay</liferay.dir.new>
        <jboss.dir.old>${project.basedir}/../../../servers/trunk/jboss/target/servers/jboss-as-7.1.1.Final</jboss.dir.old>
        <jboss.dir.new>${user.home}/servers/jboss</jboss.dir.new>

    </properties>

	<scm>
		<connection>scm:svn:${project.svn.base}/trunk</connection>
		<developerConnection>scm:svn:${project.svn.base}/trunk</developerConnection>
		<url>${project.svn.base}</url>
	</scm>

	<distributionManagement>
		<repository>
			<id>oph-sade-artifactory</id>
			<name>oph-sade-artifactory-releases</name>
			<url>http://penaali.hard.ware.fi/artifactory/oph-sade-release-local</url>
		</repository>
		 <snapshotRepository>
			<id>oph-sade-artifactory</id>
			<name>oph-sade-artifactory-snapshots</name>
			<url>http://penaali.hard.ware.fi/artifactory/oph-sade-snapshot-local</url>
		</snapshotRepository>
	</distributionManagement>

	<repositories>
		<repository>
		    <id>oph-sade-artifactory-snapshots</id>
            <url>http://penaali.hard.ware.fi/artifactory/oph-sade-snapshot-local</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
		</repository>
		<repository>
			<id>oph-sade-artifactory-releases</id>
			<url>http://penaali.hard.ware.fi/artifactory/oph-sade-release-local</url>
		</repository>
		<repository>
			<id>vaadin-addons</id>
			<name>Vaadin addons</name>
			<url>http://penaali.hard.ware.fi/artifactory/vaadin-addons</url>
		</repository>
		<repository>
			<id>com.springsource.repository.bundles.release</id>
			<name>SpringSource Enterprise Bundle Repository - SpringSource Bundle Releases</name>
			<url>http://penaali.hard.ware.fi/artifactory/springsource-ebr/</url>
		</repository>
		<repository>
			<id>com.springsource.repository.bundles.external</id>
			<name>SpringSource Enterprise Bundle Repository - External Bundle Releases</name>
			<url>http://penaali.hard.ware.fi/artifactory/spring-ebr/</url>
		</repository>
		<repository>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<id>com.springsource.repository.maven.snapshot</id>
			<name>SpringSource Enterprise Bundle Maven Repository - SpringSource Snapshot Releases</name>
			<url>http://penaali.hard.ware.fi/artifactory/com.springsource.repository.maven.snapshot/</url>
		</repository>
		<repository>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>com.springsource.repository.maven.milestone</id>
			<name>Spring Framework Maven Milestone Releases (Maven Central Format)</name>
			<url>http://penaali.hard.ware.fi/artifactory/com.springsource.repository.maven.milestone/</url>
		</repository>
		<repository>
			<id>atomikos</id>
			<name>Atomikos repository</name>
			<url>http://penaali.hard.ware.fi/artifactory/atomikos/</url>
		</repository>
		<repository>
			<id>shibboleth</id>
			<name>Shibboleth</name>
			<url>http://penaali.hard.ware.fi/artifactory/shibboleth/</url>
		</repository>
		<repository>
			<id>libs-3rd-party</id>
			<name>libs-3rd-party</name>
			<url>http://penaali.hard.ware.fi/artifactory/libs-3rd-party</url>
		</repository>
		<repository>
			<id>bedatadriven</id>
			<name>bedatadriven</name>
			<url>http://penaali.hard.ware.fi/artifactory/bedatadriven/</url>
		</repository>
		<repository>
			<id>cpdetector</id>
			<name>cpdetector</name>
			<url>http://penaali.hard.ware.fi/artifactory/cpdetector</url>
		</repository>

		
				<!--
		<repository>
			<id>mysema</id>
			<name>Mysema source</name>
			<url>http://penaali.hard.ware.fi/artifactory/mysema/</url>
		</repository>-->

	</repositories>
	
	<pluginRepositories>
		<!--<pluginRepository>
			<id>com.springsource.repository.bundles.release</id>
			<name>SpringSource Enterprise Bundle Repository - SpringSource Bundle Releases</name>
			<url>http://penaali.hard.ware.fi/artifactory/springsource-ebr/</url>
		</pluginRepository>
		<pluginRepository>
			<id>com.springsource.repository.bundles.external</id>
			<name>SpringSource Enterprise Bundle Repository - External Bundle Releases</name>
			<url>http://penaali.hard.ware.fi/artifactory/spring-ebr/</url>
		</pluginRepository>
		<pluginRepository>
			<id>com.springsource.repository.bundles.milestone</id>
			<name>SpringSource Enterprise Bundle Repository - External Bundle Milestones</name>
			<url>http://penaali.hard.ware.fi/artifactory/com.springsource.repository.bundles.milestone/</url>
		</pluginRepository>-->
	</pluginRepositories>

	<build>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*</include>
				</includes>
			</resource>
			<!-- profiilikohtaiset resurssit tässä että ne ylikirjoittavat oletusresurssit -->
			<resource>
				<directory>src/main/profile/${env}</directory>
				<includes>
					<include>**/*</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/profile/${profileEnv}</directory>
				<includes>
					<include>**/*</include>
				</includes>
			</resource>
		</resources>

		<!--<extensions> -->
		<!--<extension> -->
		<!--<groupId>fi.vm.sade.generic</groupId> -->
		<!--<artifactId>generic-maven-extension</artifactId> -->
		<!--<version>1.0-SNAPSHOT</version> -->
		<!--</extension> -->
		<!--</extensions> -->

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${compiler.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>${enforcer.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${source.plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${surefire.plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${failsafe.plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${deploy.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>${release.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-bundle-plugin</artifactId>
					<version>${bundle.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${checkstyle.plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${resources.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${jar.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>com.atlassian.maven.plugins</groupId>
					<artifactId>maven-clover2-plugin</artifactId>
					<version>${clover.version}</version>
					<configuration>
						<license><![CDATA[rpRQNMNVbDQGOEFKsVQKeIihqPnFbdDEHvvNdDVKJlFhJhe
                                          mj2KgKqUCcBA763sFqgbibB52L0Cp0MzNnhQ88tyJuOnONl
                                          mQQqssopQmnQMMroQMPVTqPQRnpqrQNQOPTtWuTusvWnvSs
                                          vtWXTmTTTTSosUoWSxxStWuswtMRnmnmUUnppnpuqqmmmmm
                                          UUnppnpuqqmmmmmUU6fkkfpeWEXqflkXiW2lXoaWlcW5arZ
                                          XqflkUUor]]>
						</license>
						<snapshot>${clover.snapshot}</snapshot>
						<singleCloverDatabase>${clover.singleCloverDatabase}</singleCloverDatabase>
						<cloverDatabase>${clover.cloverDatabase}</cloverDatabase>
						<outputDirectory>${clover.outputDirectory}</outputDirectory>
						<generateHistorical>${clover.generateHistorical}</generateHistorical>
						<historyDir>${clover.historyDir}</historyDir>
						<alwaysReport>true</alwaysReport>
						<generateXml>true</generateXml>
						<includesAllSourceRoots>true</includesAllSourceRoots>
						<excludes>
							<exclude>**/src/test/**/*.*</exclude>
							<exclude>**/test-classes/**/*.*</exclude>
							<exclude>**/selenium/**/*.*</exclude>
							<exclude>**/selenium/**/*Test.java</exclude>
						</excludes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.7</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
					<debug>${compiler.debug}</debug>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<execution>
						<id>enforce-java</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireJavaVersion>
									<version>[1.6,1.6.1]</version>
								</requireJavaVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Attach sources with distribute package -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- create also tests jar -->
			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-jar-plugin</artifactId> 
				<executions> <execution> <goals> <goal>test-jar</goal> </goals> </execution> 
				</executions> </plugin> -->
			<!-- build test-jar which can be used to reuse module's tests from another 
				module (case: system tests) -->
			<!-- suositeltiin käyttämään ennemmin tätä urlissa: http://stackoverflow.com/questions/1725476/maven-test-dependency-in-multi-module-project -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.2</version>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>


			<!-- separate unit tests and integration/system tests -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<reportsDirectory>${surefire.reportsDirectory}</reportsDirectory>
					<alwaysGenerateFailsafeReport>true</alwaysGenerateFailsafeReport>
					<excludes>
						<exclude>**/selenium/**/*</exclude>
						<exclude>**/it/**/*</exclude>
						<exclude>**/itest/**/*</exclude>
						<exclude>**/integrationtest/**/*</exclude>
						<exclude>**/stest/**/*</exclude>
						<exclude>**/systemtest/**/*</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<configuration>
					<reportsDirectory>${surefire.reportsDirectory}</reportsDirectory>
					<alwaysGenerateFailsafeReport>true</alwaysGenerateFailsafeReport>
					<includes>
						<include>**/selenium/**/*Test*</include>
						<include>**/it/**/*Test*</include>
						<include>**/itest/**/*Test*</include>
						<include>**/integrationtest/**/*Test*</include>
						<include>**/stest/**/*Test*</include>
						<include>**/systemtest/**/*Test*</include>
					</includes>
					<argLine>-XX:MaxPermSize=256M -Xmx512m</argLine>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- print active profiles -->
			<!-- TODO: näyttää profiilit vain current pomista, ei parenttien <plugin> 
				<artifactId>maven-help-plugin</artifactId> <executions> <execution> <phase>validate</phase> 
				<goals> <goal>active-profiles</goal> </goals> </execution> </executions> 
				</plugin> -->

			<plugin>
				<!-- explicitly define maven-deploy-plugin after other to force exec 
					order -->
				<artifactId>maven-deploy-plugin</artifactId>
				<executions>
					<execution>
						<id>deploy</id>
						<phase>deploy</phase>
						<goals>
							<goal>deploy</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<configuration>
					<tagBase>${project.svn.base}/releases</tagBase>
				</configuration>
			</plugin>

			<!--<plugin> -->
			<!--<groupId>com.googlecode.maven-java-formatter-plugin</groupId> -->
			<!--<artifactId>maven-java-formatter-plugin</artifactId> -->
			<!--</plugin> -->
			<!--<version>0.3.1</version> -->

			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<overwrite>true</overwrite>
				</configuration>
			</plugin>

            <!--
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <id>attach-artifacts</id>
                        <phase>package</phase>
                        <goals>
                            <goal>attach-artifact</goal>
                        </goals>
                        <configuration>
                            <artifacts>
                                <artifact>
                                    <file>target/hibernate3/sql/schema.ddl</file>
                                    <type>ddl</type>
                                    <classifier>schema</classifier>
                                </artifact>
                            </artifacts>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            -->

		</plugins>
	</build>

	<dependencyManagement>
		<dependencies>
			<!-- Testing -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-all</artifactId>
				<version>${mockito.version}</version>
			</dependency>
			<dependency>
				<groupId>fi.vm.sade.generic</groupId>
				<artifactId>generic-test-support</artifactId>
				<version>${sade-generic.version}</version>
			</dependency>
			<dependency>
				<groupId>fi.vm.sade.generic</groupId>
				<artifactId>dbunit-support</artifactId>
				<version>${sade-generic.version}</version>
			</dependency>

			<!-- Logging -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-simple</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>${log4j.version}</version>
			</dependency>

			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>${servlet.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.portlet</groupId>
				<artifactId>portlet-api</artifactId>
				<version>${portlet.api.version}</version>
			</dependency>

			<!-- CXF dependencies -->
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-api</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-bundle</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-frontend-jaxrs</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-frontend-jaxws</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-core</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-transports-local</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-transports-http</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-common-utilities</artifactId>
				<version>${cxf.version}</version>
			</dependency>

			<!-- Camel dependencies -->
			<!-- Camel libraries -->
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-core</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-spring</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-bindy</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-csv</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-castor</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-cxf</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-http</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-jms</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-test</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-mail</artifactId>
				<version>${camel.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-velocity</artifactId>
				<version>${camel.version}</version>
			</dependency>

			<!-- ActiveMQ -->
			<dependency>
				<groupId>org.apache.activemq</groupId>
				<artifactId>activemq-camel</artifactId>
				<version>${activemq.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.activemq</groupId>
				<artifactId>activemq-core</artifactId>
				<version>${activemq.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.activemq</groupId>
				<artifactId>activemq-pool</artifactId>
				<version>${activemq.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.osgi</groupId>
				<artifactId>spring-osgi-core</artifactId>
				<version>${spring.osgi.version}</version>
			</dependency>
			<!-- dublicate
			<dependency>
				<groupId>fi.vm.sade.generic</groupId>
				<artifactId>generic-test-support</artifactId>
				<version>${sade-generic.version}</version>
			</dependency>-->

			<!-- Hibernate libraries -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>com.springsource.org.hibernate</artifactId>
				<version>${hibernate.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>com.springsource.org.hibernate.ejb</artifactId>
				<version>${hibernate.ejb.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>com.springsource.org.hibernate.annotations</artifactId>
				<version>${hibernate.ejb.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate.common</groupId>
				<artifactId>com.springsource.org.hibernate.annotations.common</artifactId>
				<version>${hibernate.annotations.common.version}</version>
			</dependency>

			<!-- QueryDSL -->
			<dependency>
				<groupId>com.mysema.querydsl</groupId>
				<artifactId>querydsl-apt</artifactId>
				<version>${querydsl.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>com.mysema.querydsl</groupId>
				<artifactId>querydsl-jpa</artifactId>
				<version>${querydsl.version}</version>
			</dependency>
			
			<dependency>
				<groupId>fi.vm.sade.generic</groupId>
				<artifactId>generic-common</artifactId>
				<version>${sade-generic.version}</version>
			</dependency>
			<dependency>
				<groupId>fi.vm.sade.generic</groupId>
				<artifactId>generic-dao</artifactId>
				<version>${sade-generic.version}</version>
			</dependency>
			<dependency>
				<groupId>fi.vm.sade.generic</groupId>
				<artifactId>generic-service</artifactId>
				<version>${sade-generic.version}</version>
			</dependency>
			<dependency>
				<groupId>postgresql</groupId>
				<artifactId>postgresql</artifactId>
				<version>${postgresql.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hsqldb</groupId>
				<artifactId>hsqldb</artifactId>
				<version>${hsqldb.version}</version>
			</dependency>

			<!-- Spring libraries used in APP and Service -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-expression</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-orm</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-tx</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aspects</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jms</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<!-- Spring libraries used in ServiceMix -->
			<!-- this is duplicate <dependency> <groupId>org.springframework.osgi</groupId> 
				<artifactId>spring-osgi-core</artifactId> <version>${spring.osgi.version}</version> 
				</dependency> -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>org.springframework.context</artifactId>
				<version>${osgi.spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>org.springframework.beans</artifactId>
				<version>${osgi.spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>org.springframework.core</artifactId>
				<version>${osgi.spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>org.springframework.transaction</artifactId>
				<version>${osgi.spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>org.springframework.web</artifactId>
				<version>${osgi.spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>org.springframework.expression</artifactId>
				<version>${osgi.spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>org.springframework.asm</artifactId>
				<version>${osgi.spring.version}</version>
			</dependency>

			<!-- Utilities -->
			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>${jodatime.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>${commons-lang.version}</version>
			</dependency>

			<!-- Database -->
			<dependency>
				<groupId>javax.transaction</groupId>
				<artifactId>jta</artifactId>
				<version>${jta.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.servicemix.bundles</groupId>
				<artifactId>org.apache.servicemix.bundles.commons-dbcp</artifactId>
				<version>${commons-dbcp.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.persistence</groupId>
				<artifactId>com.springsource.javax.persistence</artifactId>
				<version>${jpa-api.version}</version>
				<scope>provided</scope>
			</dependency>

			<!-- UI -->
			<dependency>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin</artifactId>
				<version>${vaadin.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<!-- duplicate <dependency> <groupId>javax.servlet</groupId> <artifactId>javax.servlet-api</artifactId> 
				<version>${servlet.version}</version> </dependency> -->
			<!-- duplicate <dependency> <groupId>javax.portlet</groupId> <artifactId>portlet-api</artifactId> 
				<version>${portlet.api.version}</version> </dependency> -->
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjrt</artifactId>
				<version>${aspectj.version}</version>
			</dependency>
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjweaver</artifactId>
				<version>${aspectj.version}</version>
			</dependency>
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjtools</artifactId>
				<version>${aspectj.version}</version>
			</dependency>
			<dependency>
				<groupId>aopalliance</groupId>
				<artifactId>aopalliance</artifactId>
				<version>${aopalliance.version}</version>
			</dependency>
			<dependency>
				<groupId>org.vaadin.addons</groupId>
				<artifactId>formbinder</artifactId>
				<version>${vaadin.formbinder.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.activation</groupId>
				<artifactId>activation</artifactId>
				<version>1.1.1</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>${surefire.plugin.version}</version>
				<configuration>
					<reportsDirectory>${surefire.reportsDirectory}</reportsDirectory>
					<alwaysGenerateFailsafeReport>true</alwaysGenerateFailsafeReport>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

	
		
	<profiles>
		<profile>
			<id>jrebel</id>
			<activation>
				<property>
					<name>!skipJrebel</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.zeroturnaround</groupId>
						<artifactId>jrebel-maven-plugin</artifactId>
						<version>${jrebel.plugin.version}</version>
						<executions>
							<execution>
								<id>generate-rebel-xml</id>
								<phase>process-resources</phase>
								<goals>
									<goal>generate</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>checkstyle</id>
			<!--<activation>
				<property>
					<name>checkstyle</name>
				</property>
			</activation>-->
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-checkstyle-plugin</artifactId>
						<configuration>
							<excludes>${checkstyle.excludes}</excludes>
							<skip>${checkstyle.skip}</skip>
							<configLocation>${checkstyle.configLocation}</configLocation>
							<failsOnError>${checkstyle.failsOnError}</failsOnError>
							<consoleOutput>${checkstyle.consoleOutput}</consoleOutput>
						</configuration>
						<executions>
							<execution>
								<id>check</id>
								<phase>verify</phase>
								<goals>
									<goal>check</goal>
								</goals>
							</execution>
						</executions>
						<dependencies>
                            <!--
							<dependency>
								<groupId>fi.vm.sade.generic</groupId>
								<artifactId>build-utilities</artifactId>
								<version>1.0-SNAPSHOT</version>
							</dependency>
							-->
						</dependencies>
					</plugin>
				</plugins>
			</build>
			<reporting>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-checkstyle-plugin</artifactId>
						<version>${checkstyle.plugin.version}</version>
						<configuration>
							<excludes>${checkstyle.excludes}</excludes>
							<skip>${checkstyle.skip}</skip>
							<configLocation>${checkstyle.configLocation}</configLocation>
							<failsOnError>${checkstyle.failsOnError}</failsOnError>
							<consoleOutput>${checkstyle.consoleOutput}</consoleOutput>
						</configuration>
					</plugin>
				</plugins>
			</reporting>
		</profile>

		<profile>
			<id>findbugs</id>
			<!--<activation>
				<property>
					<name>findbugs</name>
				</property>
			</activation>-->
			<properties>
				<compiler.debug>true</compiler.debug>
				<findbugs.version>1.3.2</findbugs.version>
			</properties>
			<build>
				<plugins>
					<!-- findbugs maven blugin is shit (vulgar. Expel feces from the body) -->
					<!-- <plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>findbugs-maven-plugin</artifactId> 
						<version>${findbugs.plugin.version}</version> <executions> <execution> <id>findbugs 
						findbugs</id> <phase>post-integration-test</phase> <goals> <goal>findbugs</goal> 
						</goals> </execution> <execution> <id>findbugs check</id> <phase>verify</phase> 
						<goals> <goal>check</goal> </goals> </execution> </executions> <configuration> 
						<threshold>High</threshold> <effort>Default</effort> <failOnError>true</failOnError> 
						<findbugsXmlWithMessages>true</findbugsXmlWithMessages> <outputDirectory>${project.build.directory}/findbugs</outputDirectory> 
						<findbugsXmlOutputDirectory>${project.build.directory}/findbugs</findbugsXmlOutputDirectory> 
						</configuration> </plugin> -->

					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>antrun-findbugs</id>
								<phase>verify</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<taskdef resource="net/sf/antcontrib/antcontrib.properties"
											classpathref="maven.plugin.classpath" />
										<if>
											<available file="${project.build.directory}/classes/fi" />
											<then>
												<taskdef name="findbugs"
													classname="edu.umd.cs.findbugs.anttask.FindBugsTask"
													classpathref="maven.plugin.classpath" />

												<property name="findbugsclasspath" refid="maven.plugin.classpath" />
												<property name="runtime_classpath" refid="maven.runtime.classpath" />
												<property name="compile_classpath" refid="maven.compile.classpath" />

												<mkdir dir="${project.build.directory}/findbugs" />
												<echo>Using localRepository: ${settings.localRepository}</echo>
												<findbugs output="html"
													outputFile="${project.build.directory}/findbugs/findbugs.html"
													classpath="${findbugsclasspath}"
													pluginlist="${settings.localRepository}/net/sourceforge/findbugs/coreplugin/${findbugs.version}/coreplugin-${findbugs.version}.jar"
													jvmargs="-Xmx256m" reportLevel="medium" effort="default"
													failOnError="true">
													<sourcePath location="${project.basedir}/src/main/java" />
													<class location="${project.build.directory}/classes" />
													<auxClasspath>
														<path refid="maven.compile.classpath" />
														<path refid="maven.runtime.classpath" />
														<path refid="maven.plugin.classpath" />
													</auxClasspath>
												</findbugs>
											</then>
											<else>
												<echo>Skip findbugs, because directory
													'${project.build.directory}/classes/fi' not found.</echo>
											</else>
										</if>
									</target>
								</configuration>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>net.sourceforge.findbugs</groupId>
								<artifactId>coreplugin</artifactId>
								<version>${findbugs.version}</version>
							</dependency>
							<dependency>
								<groupId>net.sourceforge.findbugs</groupId>
								<artifactId>findbugs</artifactId>
								<version>${findbugs.version}</version>
							</dependency>
							<dependency>
								<groupId>jaxen</groupId>
								<artifactId>jaxen</artifactId>
								<version>1.1</version>
							</dependency>
							<dependency>
								<groupId>ant-contrib</groupId>
								<artifactId>ant-contrib</artifactId>
								<version>${ant-contrib.version}</version>
								<exclusions>
									<exclusion>
										<groupId>ant</groupId>
										<artifactId>ant</artifactId>
									</exclusion>
								</exclusions>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>sonar</id>
			<properties>
				<!-- Dynamic analysis relates to unit tests. By default, those unit tests 
					are executed but you can optionally decide to do only static analysis or 
					to reuse existing reports which have been previously generated. Possible 
					values are true, false, reuseReports. -->
				<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>

				<!-- The absolute or relative path of the surefire reports directory. 
					Used only if sonar.dynamicAnalysis is reuseReports. -->
				<sonar.surefire.reportsPath>${surefire.reportsDirectory}</sonar.surefire.reportsPath>
				<!-- The absolute or relative path of the clover xml report file. Used 
					only if sonar.dynamicAnalysis is reuseReports. -->
				<sonar.core.codeCoveragePlugin>clover</sonar.core.codeCoveragePlugin>
				<sonar.clover.reportPath>${clover.outputDirectory}/clover.xml</sonar.clover.reportPath>

				<checkstyle.skip>true</checkstyle.skip>
				<checkstyle.excludes>**/*.java</checkstyle.excludes>
				<!-- EXAMPLE FOR MYSQL -->
				<sonar.jdbc.url>jdbc:mysql://localhost:3306/sonar?useUnicode=true&amp;characterEncoding=utf8</sonar.jdbc.url>
				<sonar.jdbc.driverClassName>com.mysql.jdbc.Driver</sonar.jdbc.driverClassName>
				<sonar.jdbc.username>sonar</sonar.jdbc.username>
				<sonar.jdbc.password>Dx4k7T23x3ox8yS</sonar.jdbc.password>
				<!-- optional URL to server. Default value is http://localhost:9000 -->
				<sonar.host.url>http://pulpetti.hard.ware.fi:9000/sonar</sonar.host.url>
			</properties>
			<dependencies>
				<dependency>
					<groupId>org.codehaus.sonar-plugins</groupId>
					<artifactId>sonar-clover-plugin</artifactId>
					<version>2.8</version>
				</dependency>
			</dependencies>
		</profile>

		<profile>
			<id>restore.reports</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<phase>install</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<copy failonerror="false" verbose="true"
											todir="${project.build.directory}/surefire-reports">
											<fileset
												dir="${user.home}/.surefire-reports/${project.groupId}-${project.artifactId}/surefire-reports" />
										</copy>
										<copy failonerror="false" verbose="true"
											todir="${project.build.directory}/failsafe-reports">
											<fileset
												dir="${user.home}/.surefire-reports/${project.groupId}-${project.artifactId}/failsafe-reports" />
										</copy>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>save.reports</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<phase>install</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<delete
											dir="${user.home}/.surefire-reports/${project.groupId}-${project.artifactId}" />

										<copy failonerror="false" verbose="true"
											todir="${user.home}/.surefire-reports/${project.groupId}-${project.artifactId}/failsafe-reports">
											<fileset dir="${project.build.directory}/failsafe-reports" />
										</copy>
										<copy failonerror="false" verbose="true"
											todir="${user.home}/.surefire-reports/${project.groupId}-${project.artifactId}/surefire-reports">
											<fileset dir="${project.build.directory}/surefire-reports" />

										</copy>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>


		<profile>
			<id>javadoc</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>2.8.1</version>
						<!--<configuration>
						  <show>private</show>
						  <nohelp>true</nohelp>
						</configuration>-->
						<executions>
							<execution>
								<phase>install</phase>
								<goals>
									<goal>javadoc</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		
		<profile>
			<id>clover.all</id>
			<properties>
				<checkstyle.skip>true</checkstyle.skip>
				<checkstyle.excludes>**/*.java</checkstyle.excludes>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>com.atlassian.maven.plugins</groupId>
						<artifactId>maven-clover2-plugin</artifactId>
						<executions>
							<execution>
								<id>clover</id>
								<goals>
									<goal>setup</goal>
									<goal>optimize</goal>
									<goal>snapshot</goal>
								</goals>
							</execution>
							<execution>
								<phase>verify</phase>
								<goals>
									<goal>clover</goal>
									<goal>log</goal>
									<!-- <goal>check</goal> disable check until we have selenium testi 
										up and running in bamboo -->
									<goal>save-history</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<reporting>
				<plugins>
					<plugin>
						<groupId>com.atlassian.maven.plugins</groupId>
						<artifactId>maven-clover2-plugin</artifactId>
						<version>${clover.version}</version>
					</plugin>
				</plugins>
			</reporting>
			<dependencies>
				<dependency>
					<groupId>com.cenqua.clover</groupId>
					<artifactId>clover</artifactId>
					<version>${clover.version}</version>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>jetty</id>
			<activation>
				<file>
					<exists>profile.jetty</exists>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.mortbay.jetty</groupId>
						<artifactId>maven-jetty-plugin</artifactId>
						<version>${jetty.version}</version>
						<configuration>
							<webApp>${jetty.webApp}</webApp>
							<contextPath>/${jetty.module}</contextPath>
							<!-- false if we want to keep jetty running -->
							<daemon>${daemon}</daemon>
							<!--<daemon>false</daemon> -->
							<stopKey>stop</stopKey>
							<stopPort>8888</stopPort>
						</configuration>
						<executions>
							<!-- not needed anymore after embedded vaadin <execution> <id>start-jetty</id> 
								<phase>pre-integration-test</phase> <goals> <goal>run-war</goal> </goals> 
								</execution> <execution> <id>stop-jetty</id> <phase>post-integration-test</phase> 
								<goals> <goal>stop</goal> </goals> </execution> -->
						</executions>
					</plugin>
					<!-- <plugin> <artifactId>maven-antrun-plugin</artifactId> <executions> 
						<execution> <phase>compile</phase> <goals> <goal>run</goal> </goals> <configuration> 
						<tasks> <echo message=" ***** JETTY PROFILE ACTIVE *****"/> </tasks> </configuration> 
						</execution> </executions> </plugin> -->
				</plugins>
			</build>

		</profile>

		<!-- servicemix installation profile - TODO: replace with more elegant 
			solution when available -->
		<profile>
			<id>servicemix-install</id>
			<activation>
				<file>
					<exists>profile.servicemix</exists>
				</file>
			</activation>
			<build>
				<plugins>

					<!-- run servicemix -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<id>exec-servicemix-start</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>java</goal>
								</goals>
								<configuration>
									<mainClass>fi.vm.sade.servicemix.ServicemixStart</mainClass>
									<arguments>
										<argument>${project.basedir}/target/servers/apache-servicemix-4.4.1</argument>
										<argument>${servicemix.waitforBundle}</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>exec-servicemix-stop</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>java</goal>
								</goals>
								<configuration>
									<mainClass>fi.vm.sade.servicemix.ServicemixStop</mainClass>
									<arguments>
										<argument>${project.basedir}/target/servers/apache-servicemix-4.4.1</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
						<configuration>
							<classpathScope>test</classpathScope>
						</configuration>
					</plugin>

					<!-- TODO: antrun not so elegant but works for now, replace with some 
						dependency system -->
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>servicemix-install-server</id>
								<!-- package phase so this runs before smx start, which is at pre-integration-test -->
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<taskdef resource="net/sf/antcontrib/antcontrib.properties"
											classpathref="maven.plugin.classpath" />
										<if>
											<not>
												<available
													file="${project.basedir}/target/servers/apache-servicemix-4.4.1" />
											</not>
											<then>
												<!--<unzip src="${settings.localRepository}/apache/servicemix/4.4.1/servicemix-4.4.1.zip" 
													dest="${project.basedir}/target/servers"/> -->
												<if>
													<os family="windows" />
													<then>
														<get
															src="http://www.nic.funet.fi/pub/mirrors/apache.org/servicemix/servicemix-4/4.4.1/apache-servicemix-4.4.1.zip"
															dest="${project.basedir}/target/apache-servicemix-4.4.1.zip" />
														<unzip
															src="${project.basedir}/target/apache-servicemix-4.4.1.zip"
															dest="${project.basedir}/target/servers" />
														<!--<copy file="${project.basedir}/karaf.bat" todir="${project.basedir}/target/servers/apache-servicemix-4.4.1/bin" 
															failonerror="false"/> -->
														<!--<copy file="${project.basedir}/servicemix.bat" todir="${project.basedir}/target/servers/apache-servicemix-4.4.1/bin" 
															failonerror="false"/> -->
													</then>
													<else>
														<get
															src="http://www.nic.funet.fi/pub/mirrors/apache.org/servicemix/servicemix-4/4.4.1/apache-servicemix-4.4.1.tar.gz"
															dest="${project.basedir}/target/apache-servicemix-4.4.1.tar.gz" />
														<gunzip
															src="${project.basedir}/target/apache-servicemix-4.4.1.tar.gz"
															dest="${project.basedir}/target/apache-servicemix-4.4.1.tar" />
														<untar
															src="${project.basedir}/target/apache-servicemix-4.4.1.tar"
															dest="${project.basedir}/target/servers" />
														<!--<copy file="${project.basedir}/karaf" todir="${project.basedir}/target/servers/apache-servicemix-4.4.1/bin" 
															failonerror="false"/> -->
														<!--<copy file="${project.basedir}/servicemix" todir="${project.basedir}/target/servers/apache-servicemix-4.4.1/bin" 
															failonerror="false"/> -->
													</else>
												</if>
												<copy
													todir="${project.basedir}/target/servers/apache-servicemix-4.4.1"
													failonerror="false" verbose="true" overwrite="true">
													<fileset dir="${project.basedir}/smx" includes="**/*.*" />
												</copy>
												<if>
													<os family="windows" />
													<then>
													</then>
													<else>
														<chmod
															file="${project.basedir}/target/servers/apache-servicemix-4.4.1/bin/servicemix"
															perm="755" verbose="true" />
														<chmod
															file="${project.basedir}/target/servers/apache-servicemix-4.4.1/bin/karaf"
															perm="755" verbose="true" />
														<chmod
															file="${project.basedir}/target/servers/apache-servicemix-4.4.1/bin/start"
															perm="755" verbose="true" />
														<chmod
															file="${project.basedir}/target/servers/apache-servicemix-4.4.1/bin/stop"
															perm="755" verbose="true" />
													</else>
												</if>
											</then>
										</if>
										<!-- <copy file="../koodisto-webservice/target/koodisto-webservice-1.0-SNAPSHOT.jar" 
											todir="target/servers/apache-servicemix-4.4.1"/> -->
										<!-- better memory for jvm in custom karaf script -->

										<!-- copy bundles/features - TODO: hack, depsuina! -->
										<!--<copy todir="target/servers/apache-servicemix-4.4.1/deploy" 
											verbose="true" failonerror="false" file="${settings.localRepository}/fi/vm/sade/generic/generic-features/1.0-SNAPSHOT/generic-features-1.0-SNAPSHOT-features.xml" 
											/> -->
										<copy todir="target/servers/apache-servicemix-4.4.1/deploy"
											verbose="true" failonerror="false" file="${servicemix.features.xml.path}" />

									</target>
								</configuration>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>ant-contrib</groupId>
								<artifactId>ant-contrib</artifactId>
								<version>${ant-contrib.version}</version>
								<exclusions>
									<exclusion>
										<groupId>ant</groupId>
										<artifactId>ant</artifactId>
									</exclusion>
								</exclusions>
							</dependency>
						</dependencies>
					</plugin>

				</plugins>
			</build>
		</profile>

		<!-- start and keep sunning servicemix at compile phase (mvn compile -Psmxrun) -->
		<profile>
			<id>smxrun</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<id>exec-servicemix-run</id>
								<phase>compile</phase>
								<goals>
									<goal>java</goal>
								</goals>
								<configuration>
									<mainClass>fi.vm.sade.servicemix.ServicemixRun</mainClass>
									<arguments>
										<argument>${project.basedir}/target/servers/apache-servicemix-4.4.1</argument>
										<argument>${servicemix.waitforBundle}</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- profile to embed service dependency inside war in app module -->
		<profile>
			<id>embedService</id>
			<properties>
				<profileEnv>embedService</profileEnv>
			</properties>
			<dependencies>
				<dependency>
					<groupId>${project.groupId}</groupId>
					<artifactId>${embedService.serviceArtifactId}</artifactId>
					<version>${project.version}</version>
				</dependency>
			</dependencies>
		</profile>

		<profile>
			<id>development</id>
			<properties>
				<env>development</env>
			</properties>
		</profile>
		<profile>
			<id>ui-development</id>
			<properties>
				<env>ui-development</env>
			</properties>
		</profile>
		<profile>
			<id>integration-test</id>
			<properties>
				<env>integration-test</env>
			</properties>
            <!-- in successful integration-test build artifacts are deployed into stable repo instead default repo -->
            <distributionManagement>
                <repository>
                    <id>oph-sade-artifactory</id>
                    <name>oph-sade-artifactory-releases</name>
                    <url>http://penaali.hard.ware.fi/artifactory/oph-sade-release-integration</url>
                </repository>
                <snapshotRepository>
                    <id>oph-sade-artifactory</id>
                    <name>oph-sade-artifactory-snapshots</name>
                    <url>http://penaali.hard.ware.fi/artifactory/oph-sade-snapshot-integration</url>
                </snapshotRepository>
            </distributionManagement>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <systemProperties>
                                <property>
                                    <name>ophServerUrl</name>
                                    <!-- TODO: lue build propseista -->
                                    <value>http://luokka.hard.ware.fi</value>
                                </property>
                            </systemProperties>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>system-test</id>
            <properties>
                <env>system-test</env>
            </properties>
            <!-- in system-test build artifacts are loaded from stable repo instead default repo -->
            <repositories>
                <repository>
                    <id>oph-sade-artifactory-snapshots</id>
                    <url>http://penaali.hard.ware.fi/artifactory/oph-sade-snapshot-integration</url>
                    <snapshots>
                        <enabled>true</enabled>
                    </snapshots>
                </repository>
                <repository>
                    <id>oph-sade-artifactory-releases</id>
                    <url>http://penaali.hard.ware.fi/artifactory/oph-sade-release-integration</url>
                </repository>
            </repositories>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <systemProperties>
                                <property>
                                    <name>ophServerUrl</name>
                                    <!-- TODO: lue build propseista -->
                                    <value>http://reppu.hard.ware.fi</value>
                                </property>
                            </systemProperties>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
			<id>QA</id>
			<properties>
				<env>QA</env>
			</properties>
		</profile>
		<profile>
			<id>PRODUCTION</id>
			<properties>
				<env>PRODUCTION</env>
			</properties>
		</profile>

        <profile>
            <id>deploy</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.7</version>
                        <executions>
                            <execution>
                                <id>deploy-to-liferay-or-jboss</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <tasks>
                                        <taskdef resource="net/sf/antcontrib/antcontrib.properties" classpath="${maven.plugin.classpath}"  />

                                        <if>
                                            <equals arg1="${project.packaging}" arg2="war"/>
                                            <then>

                                                <if>
                                                    <or>
                                                        <available file="${project.basedir}/src/main/webapp/WEB-INF/portlet.xml"/>
                                                        <equals arg1="${deploy.to.server}" arg2="liferay"/>
                                                    </or>
                                                    <then>
                                                        <echo message=" ### DEPLOY: LIFERAY"/>
                                                        <if>
                                                            <available file="${liferay.dir.new}"/>
                                                            <then>
                                                                <var name="deploy.dir" value="${liferay.dir.new}/deploy"/>
                                                            </then>
                                                            <else>
                                                                <var name="deploy.dir" value="${liferay.dir.old}/deploy"/>
                                                            </else>
                                                        </if>
                                                    </then>
                                                    <else>
                                                        <echo message=" ### DEPLOY: JBOSS"/>
                                                        <if>
                                                            <available file="${jboss.dir.new}"/>
                                                            <then>
                                                                <var name="deploy.dir" value="${jboss.dir.new}/standalone/deployments"/>
                                                            </then>
                                                            <else>
                                                                <var name="deploy.dir" value="${jboss.dir.old}/standalone/deployments"/>
                                                            </else>
                                                        </if>
                                                    </else>
                                                </if>

                                                <echo message=" ### DEPLOY: DIR: ${deploy.dir}"/>

                                                <!-- deploy webapp -->
                                                <!--<mkdir dir="${deploy.dir}" />-->
                                                <copy tofile="${deploy.dir}/${project.artifactId}.war"
                                                      failonerror="true" verbose="true"
                                                      overwrite="true"
                                                      file="${project.basedir}/target/${project.build.finalName}.war">
                                                </copy>

                                            </then>
                                            <else>
                                                <echo message=" ### DEPLOY: skipped because packaging is not war"/>
                                            </else>
                                        </if>

                                    </tasks>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>ant-contrib</groupId>
                                <artifactId>ant-contrib</artifactId>
                                <version>${ant-contrib.version}</version>
                                <exclusions>
                                    <exclusion>
                                        <groupId>ant</groupId>
                                        <artifactId>ant</artifactId>
                                    </exclusion>
                                </exclusions>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>

	<modules>
		<module>build-utilities</module>
		<module>parent-vaadin-app</module>
	</modules>

</project>
