<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- default build configuration for all projects and modules, can be overridden -->

    <groupId>fi.vm.sade.generic</groupId>
    <artifactId>build-parent</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <properties>
        <env>development</env>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <jetty.module>${project.artifactId}</jetty.module>
        <jetty.webApp>../${jetty.module}/target/${jetty.module}.war</jetty.webApp>
        <daemon>true</daemon>
        
        <!-- UI libraries -->
        <vaadin.version>6.7.5</vaadin.version>
        <gwt.version>2.3.0</gwt.version>
        <gwt.plugin.version>2.2.0</gwt.plugin.version>
        
        <!-- Our generic components -->
        <sade-generic.version>1.0-SNAPSHOT</sade-generic.version>
        
        <!-- ServiceMix components / frameworks -->
        <cxf.version>2.4.6</cxf.version>
        <camel.version>2.8.3</camel.version>
        <spring.version>3.0.6.RELEASE</spring.version>
        <spring.osgi.version>1.2.1</spring.osgi.version>
        
        <!-- Logging -->
        <slf4j.version>1.6.1</slf4j.version>
        
        <!-- Database -->
        <jpa-api.version>1.99.0</jpa-api.version>
        <atomikos.version>3.6.6</atomikos.version>
        <jta.version>1.1</jta.version>
        <postgresql.version>8.3.604</postgresql.version>
        <hsqldb.version>1.8.0.10</hsqldb.version>
        <hibernate.version>3.3.2.GA</hibernate.version>
        <hibernate.ejb.version>3.4.0.GA-A</hibernate.ejb.version>
        <hibernate.annotations.common.version>3.3.0.ga</hibernate.annotations.common.version>
        <commons-dbcp.version>1.4_1</commons-dbcp.version>
        
        <!-- Utils -->
        <jodatime.version></jodatime.version>
        
        <!-- Testing -->
        <junit.version>4.10</junit.version>
        <selenium.version>2.20.0</selenium.version>
        <dbunit.version>2.4.8</dbunit.version>
        
        <!-- Plugins versions -->
        <compiler.plugin.version>2.3.2</compiler.plugin.version>
        <enforcer.plugin.version>1.0.1</enforcer.plugin.version>
        <surefire.plugin.version>2.7.1</surefire.plugin.version>
        <failsafe.plugin.version>2.6</failsafe.plugin.version>
        <deploy.plugin.version>2.7</deploy.plugin.version>
        <release.plugin.version>2.2.1</release.plugin.version>
        <source.plugin.version>2.1.2</source.plugin.version>
        <bundle.plugin.version>2.3.7</bundle.plugin.version>
        <checkstyle.plugin.version>2.9.1</checkstyle.plugin.version>
        
        <project.svn.base>https://penaali.hard.ware.fi/svn/generic/${project.artifactId}</project.svn.base>

        <embedService.serviceArtifactId>${project.parent.artifactId}-service</embedService.serviceArtifactId>
    </properties>

	 <scm>
		<connection>scm:svn:${project.svn.base}/trunk</connection>
		<developerConnection>scm:svn:${project.svn.base}/trunk</developerConnection>
		<url>${project.svn.base}</url>
	</scm>

	<distributionManagement>
		<repository>
			<id>internal-nexus</id>
			<url>http://penaali.hard.ware.fi/nexus/content/repositories/releases/</url>
		</repository>
		<snapshotRepository>
			<id>internal-nexus-snapshots</id>
			<url>http://penaali.hard.ware.fi/nexus/content/repositories/snapshots/</url>
		</snapshotRepository>
	</distributionManagement>

    <repositories>
        <repository>
            <id>com.springsource.repository.bundles.release</id>
            <name>SpringSource Enterprise Bundle Repository - SpringSource Bundle Releases</name>
            <url>http://penaali.hard.ware.fi/nexus/content/repositories/springsource-ebr/</url>
        </repository>
        <repository>
            <id>com.springsource.repository.bundles.external</id>
            <name>SpringSource Enterprise Bundle Repository - External Bundle Releases</name>
            <url>http://penaali.hard.ware.fi/nexus/content/repositories/spring-ebr/</url>
        </repository>
        <repository>
            <id>atomikos</id>
            <name>Atomikos repository</name>
            <url>http://penaali.hard.ware.fi/nexus/content/repositories/atomikos/</url>
        </repository>
        <repository>
            <id>central</id>
            <name>Central Maven Repository</name>
            <url>http://penaali.hard.ware.fi/nexus/content/repositories/central/</url>
        </repository>
    </repositories>

    <build>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*</include>
                </includes>
            </resource>
            <!-- profiilikohtaiset resurssit tässä että ne ylikirjoittavat oletusresurssit -->
            <resource>
                <directory>src/main/profile/${env}</directory>
                <includes>
                    <include>**/*</include>
                </includes>
            </resource>
        </resources>

        <!--<extensions>-->
            <!--<extension>-->
                <!--<groupId>fi.vm.sade.generic</groupId>-->
                <!--<artifactId>generic-maven-extension</artifactId>-->
                <!--<version>1.0-SNAPSHOT</version>-->
            <!--</extension>-->
        <!--</extensions>-->

        <pluginManagement>
            <plugins>
                <plugin>
	                <groupId>org.apache.maven.plugins</groupId>
	                <artifactId>maven-compiler-plugin</artifactId>
	                <version>${compiler.plugin.version}</version>
                </plugin>
                <plugin>
	                <groupId>org.apache.maven.plugins</groupId>
	                <artifactId>maven-enforcer-plugin</artifactId>
	                <version>${enforcer.plugin.version}</version>
	            </plugin>
	            <plugin>
	                <groupId>org.apache.maven.plugins</groupId>
	                <artifactId>maven-source-plugin</artifactId>
	                <version>${source.plugin.version}</version>
	            </plugin>
	            <plugin>
	                <artifactId>maven-surefire-plugin</artifactId>
	                <version>${surefire.plugin.version}</version>
	            </plugin>
	            <plugin>
	                <artifactId>maven-failsafe-plugin</artifactId>
	                <version>${failsafe.plugin.version}</version>
	            </plugin>
	            <plugin>
	                <artifactId>maven-deploy-plugin</artifactId>
	                <version>${deploy.plugin.version}</version>
	            </plugin>
	            <plugin>
	                <groupId>org.apache.maven.plugins</groupId>
	                <artifactId>maven-release-plugin</artifactId>
	                <version>${release.plugin.version}</version>
	            </plugin>
	            <plugin>
	                <groupId>org.apache.felix</groupId>
	                <artifactId>maven-bundle-plugin</artifactId>
	                <version>${bundle.plugin.version}</version>
	            </plugin>
	            <plugin>
	               <groupId>org.apache.maven.plugins</groupId>
	               <artifactId>maven-checkstyle-plugin</artifactId>
	               <version>${checkstyle.plugin.version}</version>
	            </plugin>
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>2.5</version>
                </plugin>
<!--
                <plugin>
                    <groupId>org.mortbay.jetty</groupId>
                    <artifactId>maven-jetty-plugin</artifactId>
                    <version>6.1.10</version>
                    <configuration>
                        <scanIntervalSeconds>1</scanIntervalSeconds>
                        <stopKey>foo</stopKey>
                        <stopPort>9999</stopPort>
-->
                        <!-- false if we want to keep jetty running -->
<!--
                        <daemon>false</daemon>
                    </configuration>
                </plugin>
-->
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-java</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireJavaVersion>
                                    <version>[1.6,1.6.1]</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Attach sources with distribute package -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- separate unit tests and integration/system tests -->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>**/selenium/**</exclude>
                        <exclude>**/it/**</exclude>
                        <exclude>**/itest/**</exclude>
                        <exclude>**/integrationtest/**</exclude>
                        <exclude>**/stest/**</exclude>
                        <exclude>**/systemtest/**</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <includes>
                        <include>**/selenium/**</include>
                        <include>**/it/**</include>
                        <include>**/itest/**</include>
                        <include>**/integrationtest/**</include>
                        <include>**/stest/**</include>
                        <include>**/systemtest/**</include>
                    </includes>
                    <argLine>-XX:MaxPermSize=256M -Xmx512m</argLine>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- print active profiles -->
            <!-- TODO: näyttää profiilit vain current pomista, ei parenttien
            <plugin>
                <artifactId>maven-help-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>active-profiles</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            -->

			<plugin>
				<!-- explicitly define maven-deploy-plugin after other to force exec order -->
				<artifactId>maven-deploy-plugin</artifactId>
				<executions>
                    <execution>
                        <id>deploy</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>deploy</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <tagBase>${project.svn.base}/releases</tagBase>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <executions>
                    <execution>
                        <id>check</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <configLocation>checkstyle-oph.xml</configLocation>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>fi.vm.sade.generic</groupId>
                        <artifactId>build-utilities</artifactId>
                        <version>1.0-SNAPSHOT</version>
                    </dependency>
                </dependencies>
            </plugin>

            <!--<plugin>-->
                <!--<groupId>com.googlecode.maven-java-formatter-plugin</groupId>-->
                <!--<artifactId>maven-java-formatter-plugin</artifactId>-->
            <!--</plugin>-->
            <!--<version>0.3.1</version>-->

            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <overwrite>true</overwrite>
                </configuration>
            </plugin>

        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <configuration>
                    <configLocation>checkstyle-oph.xml</configLocation>
                </configuration>
            </plugin>
        </plugins>
    </reporting>

    <profiles>

        <profile>
            <id>jetty</id>
            <activation>
                <file>
                    <exists>profile.jetty</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.mortbay.jetty</groupId>
                        <artifactId>maven-jetty-plugin</artifactId>
                        <configuration>
                            <webApp>${jetty.webApp}</webApp>
                            <contextPath>/${jetty.module}</contextPath>
                            <!-- false if we want to keep jetty running -->
                            <daemon>${daemon}</daemon>
                            <!--<daemon>false</daemon>-->
                            <stopKey>stop</stopKey>
                            <stopPort>8888</stopPort>
                        </configuration>
                        <executions>
                            <execution>
                                <id>start-jetty</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>run-war</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>stop-jetty</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!--
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>compile</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <tasks>
                                        <echo message=" ***** JETTY PROFILE ACTIVE *****"/>
                                    </tasks>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    -->
                </plugins>
            </build>

        </profile>

        <!-- servicemix installation profile - TODO: replace with more elegant solution when available -->
        <profile>
            <id>servicemix-install</id>
            <activation>
                <file>
                    <exists>profile.servicemix</exists>
                </file>
            </activation>
            <build>
                <plugins>

                    <!-- run servicemix -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.2.1</version>
                        <executions>
                            <execution>
                                <id>exec-servicemix-start</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>java</goal>
                                </goals>
                                <configuration>
                                    <mainClass>fi.vm.sade.servicemix.ServicemixStart</mainClass>
                                    <arguments>
                                        <argument>${project.basedir}/target/servers/apache-servicemix-4.4.1</argument>
                                        <argument>${servicemix.waitforBundle}</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>exec-servicemix-stop</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>java</goal>
                                </goals>
                                <configuration>
                                    <mainClass>fi.vm.sade.servicemix.ServicemixStop</mainClass>
                                    <arguments>
                                        <argument>${project.basedir}/target/servers/apache-servicemix-4.4.1</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                        <configuration>
                            <classpathScope>test</classpathScope>
                        </configuration>
                    </plugin>

                    <!-- TODO: antrun not so elegant but works for now, replace with some dependency system -->
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>servicemix-install-server</id>
                                <!-- package phase so this runs before smx start, which is at pre-integration-test -->
                                <phase>package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <tasks>
                                        <taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="maven.plugin.classpath" />
                                        <if>
                                            <not>
                                                <available file="${project.basedir}/target/servers/apache-servicemix-4.4.1"/>
                                            </not>
                                            <then>
                                                <!--<unzip src="${settings.localRepository}/apache/servicemix/4.4.1/servicemix-4.4.1.zip" dest="${project.basedir}/target/servers"/>-->
                                                <if>
                                                    <os family="windows"/>
                                                    <then>
                                                        <get src="http://www.nic.funet.fi/pub/mirrors/apache.org/servicemix/servicemix-4/4.4.1/apache-servicemix-4.4.1.zip" dest="${project.basedir}/target/apache-servicemix-4.4.1.zip"/>
                                                        <unzip src="${project.basedir}/target/apache-servicemix-4.4.1.zip" dest="${project.basedir}/target/servers"/>
                                                        <!--<copy file="${project.basedir}/karaf.bat" todir="${project.basedir}/target/servers/apache-servicemix-4.4.1/bin" failonerror="false"/>-->
                                                        <!--<copy file="${project.basedir}/servicemix.bat" todir="${project.basedir}/target/servers/apache-servicemix-4.4.1/bin" failonerror="false"/>-->
                                                    </then>
                                                    <else>
                                                        <get src="http://www.nic.funet.fi/pub/mirrors/apache.org/servicemix/servicemix-4/4.4.1/apache-servicemix-4.4.1.tar.gz" dest="${project.basedir}/target/apache-servicemix-4.4.1.tar.gz"/>
                                                        <gunzip src="${project.basedir}/target/apache-servicemix-4.4.1.tar.gz" dest="${project.basedir}/target/apache-servicemix-4.4.1.tar"/>
                                                        <untar src="${project.basedir}/target/apache-servicemix-4.4.1.tar" dest="${project.basedir}/target/servers"/>
                                                        <!--<copy file="${project.basedir}/karaf" todir="${project.basedir}/target/servers/apache-servicemix-4.4.1/bin" failonerror="false"/>-->
                                                        <!--<copy file="${project.basedir}/servicemix" todir="${project.basedir}/target/servers/apache-servicemix-4.4.1/bin" failonerror="false"/>-->
                                                    </else>
                                                </if>
                                                <copy todir="${project.basedir}/target/servers/apache-servicemix-4.4.1" failonerror="false" verbose="true" overwrite="true">
                                                    <fileset dir="${project.basedir}/smx" includes="**/*.*"/>
                                                </copy>
                                                <if>
                                                    <os family="windows"/>
                                                    <then>
                                                    </then>
                                                    <else>
                                                        <chmod file="${project.basedir}/target/servers/apache-servicemix-4.4.1/bin/servicemix" perm="755" verbose="true"/>
                                                        <chmod file="${project.basedir}/target/servers/apache-servicemix-4.4.1/bin/karaf" perm="755" verbose="true"/>
                                                        <chmod file="${project.basedir}/target/servers/apache-servicemix-4.4.1/bin/start" perm="755" verbose="true"/>
                                                        <chmod file="${project.basedir}/target/servers/apache-servicemix-4.4.1/bin/stop" perm="755" verbose="true"/>
                                                    </else>
                                                </if>
                                            </then>
                                        </if>
                                        <!--
                                        <copy file="../koodisto-webservice/target/koodisto-webservice-1.0-SNAPSHOT.jar" todir="target/servers/apache-servicemix-4.4.1"/>
                                        -->
                                        <!-- better memory for jvm in custom karaf script -->

                                        <!-- copy bundles/features - TODO: hack, depsuina! -->
                                        <!--<copy todir="target/servers/apache-servicemix-4.4.1/deploy" verbose="true" failonerror="false" file="${settings.localRepository}/fi/vm/sade/generic/generic-features/1.0-SNAPSHOT/generic-features-1.0-SNAPSHOT-features.xml" />-->
                                        <copy todir="target/servers/apache-servicemix-4.4.1/deploy" verbose="true" failonerror="false" file="${servicemix.features.xml.path}" />

                                    </tasks>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>ant-contrib</groupId>
                                <artifactId>ant-contrib</artifactId>
                                <version>1.0b3</version>
                                <exclusions>
                                    <exclusion>
                                        <groupId>ant</groupId>
                                        <artifactId>ant</artifactId>
                                    </exclusion>
                                </exclusions>
                            </dependency>
                        </dependencies>
                    </plugin>

                </plugins>
            </build>
        </profile>

        <!-- start and keep sunning servicemix at compile phase (mvn compile -Psmxrun) -->
        <profile>
            <id>smxrun</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.2.1</version>
                        <executions>
                            <execution>
                                <id>exec-servicemix-run</id>
                                <phase>compile</phase>
                                <goals>
                                    <goal>java</goal>
                                </goals>
                                <configuration>
                                    <mainClass>fi.vm.sade.servicemix.ServicemixRun</mainClass>
                                    <arguments>
                                        <argument>${project.basedir}/target/servers/apache-servicemix-4.4.1</argument>
                                        <argument>${servicemix.waitforBundle}</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- profile to embed service dependency inside war in app module -->
        <profile>
            <id>embedService</id>
            <properties>
                <env>embedService</env>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>${embedService.serviceArtifactId}</artifactId>
                    <version>${project.version}</version>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>development</id>
            <properties>
                <env>development</env>
            </properties>
        </profile>
        <profile>
            <id>ui-development</id>
            <properties>
                <env>ui-development</env>
            </properties>
        </profile>
        <profile>
            <id>QA</id>
            <properties>
                <env>QA</env>
            </properties>
        </profile>
        <profile>
            <id>PRODUCTION</id>
            <properties>
                <env>PRODUCTION</env>
            </properties>
        </profile>

    </profiles>

  <modules>
    <module>build-utilities</module>
  </modules>
</project>
